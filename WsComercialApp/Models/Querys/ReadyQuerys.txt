Menor que (<)	&lt;
Mayor que (>)	&gt;
Comillas dobles (")	&quot;
Apóstrofe (ˋ)	&apos;
El signo & (&)	&amp;




FUNCIONES VARIAS SQL


create function MostrarTituloReporte(@Text as varchar(8000))
returns varchar(8000)
as
begin
  declare @Reset bit;
  declare @Ret varchar(8000);
  declare @i int;
  declare @c char(1);

  if @Text is null
    return null;

  select @Reset = 1, @i = 1, @Ret = '';

  while (@i <= len(@Text))
    select @c = substring(@Text, @i, 1),
      @Ret = @Ret + case when @Reset = 1 then UPPER(@c) else LOWER(@c) end,
      @Reset = case when @c like '[a-zA-Z]' then 0 else 1 end,
      @i = @i + 1
  return @Ret
end




create FUNCTION [dbo].[CantidadConLetra]
(
    @Numero             Decimal(18,2),
	@Moneda             varchar(5)
)
RETURNS Varchar(180)
AS
BEGIN
    DECLARE @ImpLetra Varchar(180)
        DECLARE @lnEntero bigint,
                        @lcRetorno VARCHAR(512),
                        @lnTerna bigint,
                        @lcMiles VARCHAR(512),
                        @lcCadena VARCHAR(512),
                        @lnUnidades bigint,
                        @lnDecenas bigint,
                        @lnCentenas bigint,
                        @lnFraccion bigint
        SELECT  @lnEntero = CAST(@Numero AS bigint),
                        @lnFraccion = (@Numero - @lnEntero) * 100,
                        @lcRetorno = '',
                        @lnTerna = 1
  WHILE @lnEntero > 0
  BEGIN /* WHILE */
            -- Recorro terna por terna
            SELECT @lcCadena = ''
            SELECT @lnUnidades = @lnEntero % 10
            SELECT @lnEntero = CAST(@lnEntero/10 AS bigint)
            SELECT @lnDecenas = @lnEntero % 10
            SELECT @lnEntero = CAST(@lnEntero/10 AS bigint)
            SELECT @lnCentenas = @lnEntero % 10
            SELECT @lnEntero = CAST(@lnEntero/10 AS bigint)
            -- Analizo las unidades
            SELECT @lcCadena =
            CASE /* UNIDADES */
              WHEN @lnUnidades = 1 THEN 'UN ' + @lcCadena
              WHEN @lnUnidades = 2 THEN 'DOS ' + @lcCadena
              WHEN @lnUnidades = 3 THEN 'TRES ' + @lcCadena
              WHEN @lnUnidades = 4 THEN 'CUATRO ' + @lcCadena
              WHEN @lnUnidades = 5 THEN 'CINCO ' + @lcCadena
              WHEN @lnUnidades = 6 THEN 'SEIS ' + @lcCadena
              WHEN @lnUnidades = 7 THEN 'SIETE ' + @lcCadena
              WHEN @lnUnidades = 8 THEN 'OCHO ' + @lcCadena
              WHEN @lnUnidades = 9 THEN 'NUEVE ' + @lcCadena
              ELSE @lcCadena
            END /* UNIDADES */
            -- Analizo las decenas
            SELECT @lcCadena =
            CASE /* DECENAS */
              WHEN @lnDecenas = 1 THEN
                CASE @lnUnidades
                  WHEN 0 THEN 'DIEZ '
                  WHEN 1 THEN 'ONCE '
                  WHEN 2 THEN 'DOCE '
                  WHEN 3 THEN 'TRECE '
                  WHEN 4 THEN 'CATORCE '
                  WHEN 5 THEN 'QUINCE '
                  WHEN 6 THEN 'DIECISEIS '
                  WHEN 7 THEN 'DIECISIETE '
                  WHEN 8 THEN 'DIECIOCHO '
                  WHEN 9 THEN 'DIECINUEVE '
                END
              WHEN @lnDecenas = 2 THEN
              CASE @lnUnidades
                WHEN 0 THEN 'VEINTE '
                ELSE 'VEINTI' + @lcCadena
              END
              WHEN @lnDecenas = 3 THEN
              CASE @lnUnidades
                WHEN 0 THEN 'TREINTA '
                ELSE 'TREINTA Y ' + @lcCadena
              END
              WHEN @lnDecenas = 4 THEN
                CASE @lnUnidades
                    WHEN 0 THEN 'CUARENTA'
                    ELSE 'CUARENTA Y ' + @lcCadena
                END
              WHEN @lnDecenas = 5 THEN
                CASE @lnUnidades
                    WHEN 0 THEN 'CINCUENTA '
                    ELSE 'CINCUENTA Y ' + @lcCadena
                END
              WHEN @lnDecenas = 6 THEN
                CASE @lnUnidades
                    WHEN 0 THEN 'SESENTA '
                    ELSE 'SESENTA Y ' + @lcCadena
                END
              WHEN @lnDecenas = 7 THEN
                 CASE @lnUnidades
                    WHEN 0 THEN 'SETENTA '
                    ELSE 'SETENTA Y ' + @lcCadena
                 END
              WHEN @lnDecenas = 8 THEN
                CASE @lnUnidades
                    WHEN 0 THEN 'OCHENTA '
                    ELSE  'OCHENTA Y ' + @lcCadena
                END
              WHEN @lnDecenas = 9 THEN
                CASE @lnUnidades
                    WHEN 0 THEN 'NOVENTA '
                    ELSE 'NOVENTA Y ' + @lcCadena
                END
              ELSE @lcCadena
            END /* DECENAS */
            -- Analizo las centenas
            SELECT @lcCadena =
            CASE /* CENTENAS */
              WHEN @lnCentenas = 1 THEN 'CIENTO ' + @lcCadena
              WHEN @lnCentenas = 2 THEN 'DOSCIENTOS ' + @lcCadena
              WHEN @lnCentenas = 3 THEN 'TRESCIENTOS ' + @lcCadena
              WHEN @lnCentenas = 4 THEN 'CUATROCIENTOS ' + @lcCadena
              WHEN @lnCentenas = 5 THEN 'QUINIENTOS ' + @lcCadena
              WHEN @lnCentenas = 6 THEN 'SEISCIENTOS ' + @lcCadena
              WHEN @lnCentenas = 7 THEN 'SETECIENTOS ' + @lcCadena
              WHEN @lnCentenas = 8 THEN 'OCHOCIENTOS ' + @lcCadena
              WHEN @lnCentenas = 9 THEN 'NOVECIENTOS ' + @lcCadena
              ELSE @lcCadena
            END /* CENTENAS */
            -- Analizo la terna
            SELECT @lcCadena =
            CASE /* TERNA */
              WHEN @lnTerna = 1 THEN @lcCadena
              WHEN @lnTerna = 2 THEN @lcCadena + 'MIL '
              WHEN @lnTerna = 3 THEN @lcCadena + 'MILLONES '
              WHEN @lnTerna = 4 THEN @lcCadena + 'MIL '
              ELSE ''
            END /* TERNA */
            -- Armo el retorno terna a terna
            SELECT @lcRetorno = @lcCadena  + @lcRetorno
            SELECT @lnTerna = @lnTerna + 1
   END /* WHILE */
   IF @lnTerna = 1
       SELECT @lcRetorno = 'CERO'
   DECLARE @sFraccion VARCHAR(15)
   SET @sFraccion = '00' + LTRIM(CAST(@lnFraccion AS varchar))
   SELECT @ImpLetra = RTRIM(@lcRetorno) + CASE WHEN @Moneda = 'LO' THEN ' SOLES'  ELSE ' DOLARES' END + SUBSTRING(@sFraccion,LEN(@sFraccion)-1,2) + '/100 '
   RETURN @ImpLetra
END;




create 
   function Fn_MostrarDesCuento(@Compania as varchar(10),@TipoCliente as varchar(3),@Cliente as int,@VentaEquipo as varchar(4),@Sucursal as varchar(10),@Recojo as varchar(1),@Item as varchar(15),@Almacen varchar(10),@FormaPago varchar(5))  
returns varchar(100)  
as  
begin  
   
  declare @Ret varchar(100);   
  
  set @Ret = (select top 1 'S' +'|'+ VW_CO_DescuentoEscalaVigente.tipodescuento +'|'+ CONVERT(VARCHAR,(PorcentajeDescuento)) +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.monto) +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.montohasta)  from VW_CO_DescuentoEscalaVigente  where (VW_CO_DescuentoEscalaVigente .Compania = @Compania) and  (VW_CO_DescuentoEscalaVigente.TipoCliente = '$$' or VW_CO_DescuentoEscalaVigente.TipoCliente =@TipoCliente) and (
  --set @Ret = (select top 1 'S' +'|'+ CONVERT(VARCHAR,(PorcentajeDescuento) +'|'+ VW_CO_DescuentoEscalaVigente.tipodescuento  +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.monto)  +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.montohasta))   from VW_CO_DescuentoEscalaVigente  where (VW_CO_DescuentoEscalaVigente .Compania = @Compania) and  (VW_CO_DescuentoEscalaVigente.TipoCliente = '$$' or VW_CO_DescuentoEscalaVigente.TipoCliente =@TipoCliente) and (
  VW_CO_DescuentoEscalaVigente.Cliente = -1 or VW_CO_DescuentoEscalaVigente.Cliente = @Cliente) and (VW_CO_DescuentoEscalaVigente.VentaEquipo = '$$' or VW_CO_DescuentoEscalaVigente.VentaEquipo =@VentaEquipo) and (VW_CO_DescuentoEscalaVigente.Sucursal = '$$' or 
  VW_CO_DescuentoEscalaVigente.Sucursal = @Sucursal) 
  and (VW_CO_DescuentoEscalaVigente.FormaPago = '$$' or 
  VW_CO_DescuentoEscalaVigente.FormaPago = @FormaPago)
  and ((VW_CO_DescuentoEscalaVigente.TipoRecojoFlag = 'S') or (VW_CO_DescuentoEscalaVigente.TipoRecojoFlag = 'N' and VW_CO_DescuentoEscalaVigente.TipoRecojo = @Recojo)) and (VW_CO_DescuentoEscalaVigente.Item = @Item) and (VW_CO_DescuentoEscalaVigente.Almacen = '$$' or VW_CO_DescuentoEscalaVigente.Almacen = @Almacen))  
  
if @Ret is null  
    return 'N';  
  
return @Ret;   
end  



create FUNCTION [dbo].[Split_App] (@String nvarchar (4000), @Delimitador nvarchar (10)) 
                returns @ValueTable table 
				(
				[Position] int,
				[Value] nvarchar(4000)
				)
begin
 declare @NextString nvarchar(4000)
 declare @Pos int
 declare @Secuencia int
 declare @NextPos int
 declare @CommaCheck nvarchar(1)
  
 --Inicializa
 set @NextString = ''
 set @CommaCheck = right(@String,1) 
  
 set @String = @String + @Delimitador
 set @Secuencia = 0;
  
 --Busca la posición del primer delimitador
 set @Pos = charindex(@Delimitador,@String)
 set @NextPos = 1
  
 --Itera mientras exista un delimitador en el string
 while (@pos <> 0)  
 begin

  set @Secuencia = @Secuencia +1;	
  set @NextString = substring(@String,1,@Pos - 1)
  
  insert into @ValueTable ([Position], [Value]) Values (@Secuencia, @NextString)
  
  set @String = substring(@String,@pos +1,len(@String))
   
  set @NextPos = @Pos
  set @pos  = charindex(@Delimitador,@String)
 end
  
 return
end


 create function Fn_ObtenerValorTrama(@Trama as varchar(max),@caracter varchar(1),@NumeroPosicion int)  
returns varchar(max)
as  
begin  
   
  declare @Ret varchar(max);   
  
  set @Ret = (SELECT  value FROM dbo.Split_App(@Trama, @caracter) where Position = @NumeroPosicion)
   
if @Ret is null  
    return null;  
  
return @Ret;   
end  



  alter   
   function Fn_MostrarDesCuento(@Compania as varchar(10),@TipoCliente as varchar(3),@Cliente as int,@VentaEquipo as varchar(4),@Sucursal as varchar(10),@Recojo as varchar(1),@Item as varchar(15),@Almacen varchar(10),@FormaPago as varchar(5))    
returns varchar(100)    
as    
begin    


  
     
  declare @Ret varchar(100);     
    
  set @Ret = (select top 1 'S'  from VW_CO_DescuentoEscalaVigente  where (VW_CO_DescuentoEscalaVigente .Compania = @Compania) and  (VW_CO_DescuentoEscalaVigente.TipoCliente = '$$' or VW_CO_DescuentoEscalaVigente.TipoCliente =isnull(@TipoCliente,'$$')) and (  
  --set @Ret = (select top 1 'S' +'|'+ CONVERT(VARCHAR,(PorcentajeDescuento) +'|'+ VW_CO_DescuentoEscalaVigente.tipodescuento  +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.monto)  +'|'+ CONVERT(VARCHAR,VW_CO_DescuentoEscalaVigente.montohasta))   from VW_CO_DescuentoEscalaVigente  where (VW_CO_DescuentoEscalaVigente .Compania = @Compania) and  (VW_CO_DescuentoEscalaVigente.TipoCliente = '$$' or VW_CO_DescuentoEscalaVigente.TipoCliente =@TipoCliente) and (  
  VW_CO_DescuentoEscalaVigente.Cliente = -1 or VW_CO_DescuentoEscalaVigente.Cliente = isnull(@Cliente,-1) ) and (VW_CO_DescuentoEscalaVigente.FormaPago = '$$' or VW_CO_DescuentoEscalaVigente.FormaPago =isnull(@FormaPago,'$$')) and (VW_CO_DescuentoEscalaVigente.VentaEquipo = '$$' or VW_CO_DescuentoEscalaVigente.VentaEquipo = isnull(@VentaEquipo,'$$') ) and (VW_CO_DescuentoEscalaVigente.Sucursal = '$$' or   
  VW_CO_DescuentoEscalaVigente.Sucursal = isnull(@Sucursal,'$$')  ) and ((VW_CO_DescuentoEscalaVigente.TipoRecojoFlag = 'S') or (VW_CO_DescuentoEscalaVigente.TipoRecojoFlag = 'N' and VW_CO_DescuentoEscalaVigente.TipoRecojo = isnull(@Recojo,'$$') )) and (VW_CO_DescuentoEscalaVigente.Item = @Item) and (VW_CO_DescuentoEscalaVigente.Almacen = '$$' or VW_CO_DescuentoEscalaVigente.Almacen = isnull(@Almacen,'$$')))    
    
if @Ret is null    
    return 'N';    
    
return @Ret;     
end 