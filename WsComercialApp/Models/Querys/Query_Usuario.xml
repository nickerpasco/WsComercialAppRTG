<?xml version="1.0" encoding ="utf-8" ?>
<sql-query>


	<Usuario.GetAllParameters>


		select   per.Persona  as IdPersonaUsuario,  per.Busqueda, per.Telefono as Telefono   ,  per.Documento as Documento, per.FechaNacimiento as FechaNacimiento, em.CompaniaSocio as CompaniaSocio, em.Sucursal as Sucursal, em.UnidadNegocioAsignada ,
		per.Persona as Persona , per.Direccion, vende.VentaEquipo,
		Usuario as Usuario , u.Clave, u.Nombre, u.UsuarioPerfil, u.Estado, per.Nombres as PrimerNombre , em.CompaniaSocio
		,(select count(*) as PuedeFacturar from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='FACAPP' and  Usuario=@UserName) as PuedeFacturar,
		(select count(*) as PuedeFacturar from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='LISFAP' and  Usuario=@UserName) as PuedeVerFacturas,
		(select count(1) as PuedeCambiarPrecio from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='EDITPE' and  Usuario=@UserName) as PuedeCambiarPrecio,
		(select count(1) as PuedeHacerDescuento from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='DESESC' and  Usuario=@UserName) as PuedeHacerDescuento,
		(select count(1) as PuedeHacerDescuento from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='GENSOL' and  Usuario=@UserName) as PuedeVerLetras,


		(select count(1) as PuedeCrearCliente from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='ADDCLI' and  Usuario=@UserName) as PuedeCrearCliente,
		(select count(1) as PuedeModificarFormaPago from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='MODFP' and  Usuario=@UserName) as PuedeModificarFormaPago,
		(select count(1) as PuedeCambiarMoneda from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='MODMON' and  Usuario=@UserName) as PuedeCambiarMoneda,


		(select count(1) as AccesoVentaRapida from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='VENRAP' and  Usuario=@UserName) as AccesoVentaRapida,
		(select count(1) as AccesoListaPedidos from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='LISTAP' and  Usuario=@UserName) as AccesoListaPedidos,
		(select count(1) as AccesoLineasCredito from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='ESTAPP' and  Usuario=@UserName) as AccesoLineasCredito,
		(select count(1) as AccesoClientes from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='ACLAPP' and  Usuario=@UserName) as AccesoClientes,
		(select count(1) as AccesoFacturacion from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='LISFAP' and  Usuario=@UserName) as AccesoFacturacion,
		(select count(1) as AccesoProductos from SeguridadAutorizaciones where AplicacionCodigo='CO' and Grupo='SYSTEM' and Concepto='CATIAP' and  Usuario=@UserName) as AccesoProductos,


		( select isnull(texto,'N') from ParametrosMast where ParametroClave='SETDIRPED' and AplicacionCodigo='CO' and CompaniaCodigo='999999') as BloquearDireccion

		from Usuario u
		inner join EmpleadoMast em on u.Usuario = em.CodigoUsuario
		inner join PersonaMast per on per.Persona = em.Empleado
		inner join CO_Vendedor vende on per.Persona = vende.Vendedor
		where u.Usuario = @UserName AND em.FechaCese IS NULL


	</Usuario.GetAllParameters>


	<Usuario.getMontoDashBorad>




		SELECT sum(MontoTotal) as MontoTotal, 'Enero' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '01'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Febrero' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '02'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Marzo' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '03'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Abril' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '04'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Mayo' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '05'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Junio' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '06'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Julio' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '07'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Agosto' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '08'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Septiembre' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '09'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Octubre' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '10'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Noviembre' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '11'
		union all SELECT sum(MontoTotal) as MontoTotal, 'Diciembre' as Mes FROM CO_Documento where Vendedor = @Vendedor and YEAR(FechaDocumento) = YEAR(GETDATE()) and MONTH(FechaDocumento) = '12'



	</Usuario.getMontoDashBorad>

	<Usuario.getLineaCreditosCabeceraLista>



		--Cabecera
		select
		Persona,
		NombreCompleto Cliente,
		isNULL(CO_LineaCredito.Monto,0) Linea,

		sum(CO_Documento.MontoTotal-CO_Documento.MontoPagado) Usado,
		case when isNULL(CO_LineaCredito.Monto,0) - sum(CO_Documento.MontoTotal-CO_Documento.MontoPagado)>=0 then
		isNULL(CO_LineaCredito.Monto,0) - sum(CO_Documento.MontoTotal-CO_Documento.MontoPagado) else 0 end Libre
		from PersonaMast Cliente
		left join CO_LineaCredito on
		Cliente.Persona=CO_LineaCredito.ClienteNumero
		left join CO_Documento on
		CO_Documento.ClienteNumero=Cliente.Persona
		left join CO_TipoDocumento on
		CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		inner join MA_ClienteVendedor on
		Cliente.Persona=MA_ClienteVendedor.Cliente
		where Cliente.escliente='S' and
		CO_LineaCredito.Estado = 'A' and
		CO_TipoDocumento.Clasificacion in ('DC','DP','LE') and
		CO_Documento.Estado='PR' and
		MA_ClienteVendedor.Vendedor=@Vendedor-- Según el vendedor loggeado
		and (@Persona is null or @Persona = 0 or Cliente.Persona = @Persona)
		group by
		Persona,
		NombreCompleto,
		CO_LineaCredito.Monto
		order by 1 desc
		OFFSET (@Index -1)* @PageSize  ROWS
		FETCH NEXT @PageSize ROWS ONLY


	</Usuario.getLineaCreditosCabeceraLista>

	<Usuario.getLineaCreditosCabeceraListaCount>


		select
		COUNT(1)
		from PersonaMast Cliente
		left join CO_LineaCredito on
		Cliente.Persona=CO_LineaCredito.ClienteNumero
		left join CO_Documento on
		CO_Documento.ClienteNumero=Cliente.Persona
		left join CO_TipoDocumento on
		CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		inner join MA_ClienteVendedor on
		Cliente.Persona=MA_ClienteVendedor.Cliente
		where Cliente.escliente='S' and
		CO_LineaCredito.Estado = 'A' and
		CO_TipoDocumento.Clasificacion in ('DC','DP','LE') and
		CO_Documento.Estado='PR' and
		MA_ClienteVendedor.Vendedor=@Vendedor-- Según el vendedor loggeado
		and (@Persona is null or @Persona = 0 or Cliente.Persona = @Persona)


	</Usuario.getLineaCreditosCabeceraListaCount>

	<Usuario.getLineaCreditosCabeceraListaDetalle>



		<![CDATA[
		
		 select
		 CO_Documento.MontoTotal,
CO_Documento.NumeroDocumento,
CO_Documento.FechaDocumento,
CO_Documento.FechaVencimiento,
Case when CONVERT(INT,GETDATE()-CO_Documento.FechaVencimiento)<0 then 0 else CONVERT(INT,GETDATE()-CO_Documento.FechaVencimiento) end Dias,
MA_FormadePago.Descripcion as FormaPago,
CO_Documento.MontoTotal-CO_Documento.MontoPagado Pendiente,
CO_Documento.LetraNumeroUnico
from PersonaMast Cliente
left join CO_LineaCredito on
Cliente.Persona=CO_LineaCredito.ClienteNumero and
CO_LineaCredito.Estado='A'
left join CO_Documento on
CO_Documento.ClienteNumero=Cliente.Persona
left join CO_TipoDocumento on
CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
left join MA_FormadePago on
CO_Documento.FormadePago=MA_FormadePago.FormadePago
where Cliente.escliente='S' and
Cliente.Persona=@Persona and -- Dependiente del cliente seleccionado
CO_TipoDocumento.Clasificacion in ('DC','DP','LE') and
CO_Documento.Estado='PR'
		
		
		]]>


	</Usuario.getLineaCreditosCabeceraListaDetalle>



	<Usuario.getNumerosDIasCredito>


		select Case When Provincia.UnidadNegocio ='LIMA' then 60 when Provincia.UnidadNegocio='PROV' then 75 else 100 end
		from Direccion inner join Departamento on Direccion.Departamento=Departamento.Departamento
		inner join Provincia on Direccion.Departamento=Provincia.Departamento and
		Direccion.Provincia=Provincia.Provincia
		where persona=@Persona
		and secuencia=@Secuencia


	</Usuario.getNumerosDIasCredito>


	<Usuario.getTipoCredito>



		select Case When Provincia.UnidadNegocio ='LIMA' then 'L' when Provincia.UnidadNegocio='PROV' then 'P' else 'E' end
		from Direccion inner join Departamento on Direccion.Departamento=Departamento.Departamento
		inner join Provincia on Direccion.Departamento=Provincia.Departamento and
		Direccion.Provincia=Provincia.Provincia
		where persona=@Persona
		and secuencia=@Secuencia


	</Usuario.getTipoCredito>


	<Usuario.GetAllParametersSeguridad>


		select AplicacionCodigo,Grupo,Concepto,Descripcion,imagen from SeguridadConcepto where Grupo =@Grupo and AplicacionCodigo = @AplicacionCodigo
		and Concepto in ( select Concepto from SeguridadAutorizaciones
		where Estado= 'A' and Usuario in	  (SELECT Perfil FROM seguridadperfilusuario WHERE USUARIO =@Usuario and Estado = 'A'))


	</Usuario.GetAllParametersSeguridad>

	<Usuario.getParametrosSistema>


		<!--select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast   where FlagMovil = 'S'
		union select '','','TIPOVENTA','T',0, tipoventa as Texto,null,null,null,null,null,null from CO_Vendedor where Vendedor=@Persona
		union select '','','SUCURSAL','T',0, Sucursal as Texto,null,null,null,null,null,null from EmpleadoMast where empleado=@Persona
		union select '','','UNIDADNEGOCIO','T',0, UnidadNegocioAsignada as Texto,null,null,null,null,null,null from EmpleadoMast where empleado=@Persona-->

		select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast   where FlagMovil = 'S'
		union  select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast  where AplicacionCodigo='CO' and ParametroClave='CURRENCY' and CompaniaCodigo='999999'
		union  select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast  where AplicacionCodigo='CO' and ParametroClave='VALTIPOFAC' and CompaniaCodigo='999999'
		union  select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast  where AplicacionCodigo='CO' and ParametroClave='VNTRPD-FPA' and CompaniaCodigo='999999'
		union  select CompaniaCodigo,AplicacionCodigo,RTRIM(ParametroClave) AS ParametroClave,TipodeDatoFlag,Numero,Texto,Fecha,Texto1,Texto2,DescripcionParametro, Estado,Explicacion   from ParametrosMast  where AplicacionCodigo='CO' and ParametroClave='RECOJODEF' and CompaniaCodigo=@Compania
		union select '','','TIPOVENTA','T',0, tipoventa as Texto,null,null,null,null,null,null from CO_Vendedor where Vendedor=@Persona
		union select '','','SUCURSAL','T',0, Sucursal as Texto,null,null,null,null,null,null from EmpleadoMast where empleado=@Persona
		union select '','','UNIDADNEGOCIO','T',0, UnidadNegocioAsignada as Texto,null,null,null,null,null,null from EmpleadoMast where empleado=@Persona
		union select '','','PREFERENCIA','T',0, ValorString as Texto,null,TRIM(Preference) as Texto1,null,null,null,null from SY_Preferences where usuario=@Usuario

	</Usuario.getParametrosSistema>

	<Usuario.getMiscelaneos>

		select 'TIPOPAGO' as CodigoTabla , TRIM(TipoPago) as CodigoElemento , DescripcionLocal as DescripcionLocal , 1  AS ValorDecimal ,'' as ValorCadena , '' AS ValorCadena2    from CO_TipoPago where  Estado = 'A'
		UNION   select 'TIPOFACTURACION' as CodigoTabla , TRIM(TipoFacturacion) as CodigoElemento , DescripcionLocal as DescripcionLocal , 1  AS ValorDecimal , '' as ValorCadena , '' AS ValorCadena2    from CO_TipoFacturacion where  Estado = 'A'
		UNION   select 'TIPODOCUMENTOS' as CodigoTabla , TRIM(TipoDocumento) as CodigoElemento , DescripcionLocal as DescripcionLocal , 1  AS ValorDecimal , '' as ValorCadena , '' AS ValorCadena2    from CO_TipoDocumento where  Estado = 'A'
		UNION   SELECT distinct 'FORMAPAGO' AS CodigoTabla, TRIM(MA_FormadePago.FormadePago) as CodigoElemento , Descripcion as DescripcionLocal ,
		MA_FormadePagoDetalle.NumeroDias  AS ValorDecimal ,
		CreditoFlag as ValorCadena , '' AS ValorCadena2  FROM MA_FormadePago 
		join MA_FormadePagoDetalle on MA_FormadePagoDetalle.FormadePago = MA_FormadePago.FormadePago
		where  Estado = 'A'
		
		UNION SELECT 'IGVVALOR' AS CodigoTabla , 'CODE' AS CodigoElemento , IMPUESTOS.Descripcion as DescripcionLocal , IMPUESTOS.FactorPorcentaje   AS ValorDecimal ,ParametrosMast.Texto as ValorCadena , '' AS ValorCadena2  FROM ParametrosMast INNER JOIN IMPUESTOS ON ParametrosMast.Texto =   IMPUESTOS.Impuesto WHERE ParametrosMast.ParametroClave = 'IGVCODE' AND ParametrosMast.AplicacionCodigo='CO'
		--UNION	 select 'DEPARTAMENTOS' AS CodigoTabla, TRIM(Departamento) as CodigoElemento,RTRIM(DescripcionCorta) as DescripcionLocal  , 1  AS ValorDecimal , '404' as ValorCadena , '' AS ValorCadena2  from Departamento
		--UNION select 'PROVINCIAS' AS CodigoTabla, TRIM(Departamento) as CodigoElemento,RTRIM(DescripcionCorta) as DescripcionLocal ,1  AS ValorDecimal ,RTRIM(Provincia)  AS ValorCadena , '' AS ValorCadena2  from Provincia --where Departamento = '24'
		--UNION select 'ZONASPOSTALES' AS CodigoTabla, TRIM(Departamento) as CodigoElemento,RTRIM(DescripcionCorta) as DescripcionLocal ,1  AS ValorDecimal ,RTRIM(Provincia)  AS ValorCadena , RTRIM(CodigoPostal)  AS ValorCadena2 from ZonaPostal --where Departamento = '02' and Provincia = '14'
		UNION select 'TIPOCLIENTE' as CodigoTabla , TRIM(TipoCliente) as CodigoElemento , DescripcionLocal as DescripcionLocal , 1  AS ValorDecimal ,'' as ValorCadena , '' AS ValorCadena2    from CO_TipoCliente where  Estado = 'A'
		UNION select 'ALMACEN' as CodigoTabla , TRIM(AlmacenCodigo) as CodigoElemento , DescripcionLocal as DescripcionLocal , 1  AS ValorDecimal ,'' as ValorCadena , '' AS ValorCadena2
		from WH_AlmacenMast
		where Estado = 'A' and AlmacenVentaFlag='S' and AlmacenCodigo
		in
		(select Concepto as AlmacenCodigo from SY_SeguridadAutorizaciones where AplicacionCodigo='SY' and Grupo='ALMACEN' and usuario=@Usuario)
	</Usuario.getMiscelaneos>



	<Usuario.getvalidaUsuario>


		select
		Usuario as Usuario, u.Clave, u.Estado, u.SesionFlag
		from Usuario u

		where u.Usuario = @UserName


	</Usuario.getvalidaUsuario>




	<Usuario.UpdateSession>


		update Usuario set SesionFlag=@SesionFlag  where Usuario=@Usuario
	</Usuario.UpdateSession>



	<Usuario.getDirrecionEMpleado>


		select AlmacenCodigo,Persona,Secuencia,Direccion,RutaDespacho from Direccion where Estado ='A' and Persona = @Persona
	</Usuario.getDirrecionEMpleado>

	<Usuario.DireccionByClienteAll>

		select Persona,Secuencia, rTRIM(Direccion) AS Direccion,ReferenciasDireccion , RutaDespacho ,  Latitud,Longitud,

		depa.DescripcionCorta as Departamento ,  prov.DescripcionCorta as Provincia,   isnull(zona.DescripcionCorta,'') as CodigoPostal ,
		e.Departamento as DepartamentoCod,e.Distrito as CodigoPostalCod,e.Provincia as ProvinciaCod
		from Direccion e with(nolock)
		LEFT join Departamento depa with(nolock) on e.Departamento = depa.Departamento
		LEFT join Provincia prov with(nolock) on   prov.Departamento = e.Departamento and prov.Provincia = e.Provincia
		LEFT join ZonaPostal zona with(nolock) on   zona.Departamento = e.Departamento and zona.Provincia = e.Provincia and zona.CodigoPostal = e.CodigoPostal
	</Usuario.DireccionByClienteAll>



	<!--PERSONASQUERY-->

	<Personas.getPersonasOnnline>



		select

		cli.SuspensionFlag,

		isnull(tipo.NoAfectoFlag,'N') as TipoFacturacionNoAfectoFlag, Telefono, CorreoElectronico,
		Persona, TRIM(Busqueda) as Busqueda , TRIM(PersonaMast.Departamento) as Departamento,TRIM(PersonaMast.Provincia) as Provincia,TRIM(PersonaMast.CodigoPostal) as CodigoPostal,TRIM(TipoPersona) as TipoPersona,TRIM(EsCliente) as EsCliente,TRIM(EsProveedor) as EsProveedor,TRIM(EsEmpleado) as EsEmpleado,
		TRIM(PersonaMast.TipoDocumento) as TipoDocumentoPersona,TRIM(cli.TipoDocumento) as TipoDocumento,TRIM(cli.TipoCliente) as TipoCliente, TRIM(cli.CentroCosto) as CentroCosto , TRIM(cli.TipoFacturacion) as TipoFacturacion,
		isnull((select formadepago from CO_LineaCredito where ClienteNumero=cli.Cliente and estado='A'),cli.FormadePago) as FormadePago,
		TRIM(cli.FormaFacturacion) as FormaFacturacion,  cli.Vendedor as Vendedor, TRIM(cli.ConceptoFacturacion) as ConceptoFacturacion,
		TRIM(Documento) as Documento,TRIM(Direccion) as Direccion,TRIM(PersonaAnt) as PersonaAnt,TRIM(DocumentoFiscal) as DocumentoFiscal,TRIM(DocumentoIdentidad) as DocumentoIdentidad,TRIM(PersonaMast.Estado)  as Estado , isnull(cli.BloquearVendedor,'N') as BloquearVendedor
		,cli.IdTransportista,ftvehi.TransportistaDescripcion,
		(select Comentario from PersonaAdvertencias with(nolock) where Tipo='01' and persona=PersonaMast.Persona) as ComentarioPersona
		from PersonaMast with(nolock)
		inner join ClienteMast cli with(nolock) on PersonaMast.Persona= cli.Cliente
		left join CO_TipoFacturacion tipo with(nolock) on cli.TipoFacturacion = tipo.TipoFacturacion
		inner join MA_ClienteVendedor cliven with(nolock) on cli.Cliente= cliven.Cliente and cliven.Vendedor = @Vendedor
		left join FT_Vehiculo ftvehi with(nolock) on  cli.IdTransportista = ftvehi.IdTransportista
		where EsCliente='S' and PersonaMast.Estado = 'A' and
		(@Persona is null or @Persona='' or Persona = @Persona)
		AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')
		order by Persona desc
		OFFSET (@Index -1)* @PageSize  ROWS
		FETCH NEXT @PageSize ROWS ONLY
	</Personas.getPersonasOnnline>


	<Personas.getCantidadDocumetosEmitidosFactura>

			Select
			Cliente.Persona,
			Cliente.NombreCompleto Cliente,
			count(CO_Documento.NumeroDocumento) as CantidadDocumentosEmitidos
			from CO_Documento inner join PersonaMast cliente
			ON CO_Documento.ClienteNumero=Cliente.Persona
			inner join CO_TipoDocumento
			ON CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
			inner join MA_ClienteVendedor on
			Cliente.Persona=MA_ClienteVendedor.Cliente
			where CO_TipoDocumento.Clasificacion in ('DC','DP') and
			CO_Documento.FechaDocumento>=@FechaDocumento and -- Según el filtro del reporte
			MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
			AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')
			group by
			Cliente.Persona,
			Cliente.NombreCompleto
			order by 2 desc
			OFFSET (@Index -1)* @PageSize  ROWS
			FETCH NEXT @PageSize ROWS ONLY


	</Personas.getCantidadDocumetosEmitidosFactura>

	<Personas.getCantidadDocumetosEmitidosFacturaCount>


		select count(1) from

		(

		Select
		Cliente.NombreCompleto Cliente,
		count(CO_Documento.NumeroDocumento) as CantidadDocumentosEmitidos
		from CO_Documento inner join PersonaMast cliente
		ON CO_Documento.ClienteNumero=Cliente.Persona
		inner join CO_TipoDocumento
		ON CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		inner join MA_ClienteVendedor on
		Cliente.Persona=MA_ClienteVendedor.Cliente
		where CO_TipoDocumento.Clasificacion in ('DC','DP') and
		CO_Documento.FechaDocumento>=@FechaDocumento
		and  MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
		AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')
		group by
		Cliente.NombreCompleto
		)a

	</Personas.getCantidadDocumetosEmitidosFacturaCount>	
		
	<Personas.getCantidadDocumetosEmitidosFacturaDetalle>

		Select
		0 as DiasDiferencias,
		'S' as MostrarComentarios,
		NotaCredito= (select MAX(CO_Documento.TipoDocumento+'-'+CO_Documento.NumeroDocumento)
		from CO_Documento with(nolock)
		where CO_Documento.CompaniaSocio=CO_Documento.CompaniaSocio and
		CO_Documento.NotaCreditoDocumento=documento.TipoDocumento+'-'+documento.NumeroDocumento),
		ComentarioCambio,
		documento.NumeroDocumento,
		documento.FechaDocumento,
		documento.MontoTotal,
		documento.ComercialPedidoNumero as LetraNumeroUnicoString,
		CO_Cobranza.FechaCobranza as FechaVencimiento,
		isnull(CO_DocumentoCobranza.MontoPagado,0) as Pendiente
		from CO_Documento documento inner join PersonaMast cliente
		ON documento.ClienteNumero=Cliente.Persona
		inner join CO_TipoDocumento
		ON documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		left join CO_DocumentoCobranza
		ON documento.CompaniaSocio=CO_DocumentoCobranza.CompaniaSocio
		and documento.TipoDocumento=CO_DocumentoCobranza.TipoDocumento
		and documento.NumeroDocumento=CO_DocumentoCobranza.NumeroDocumento
		left join CO_Cobranza
		ON CO_DocumentoCobranza.CompaniaSocio=CO_Cobranza.CompaniaSocio
		and CO_DocumentoCobranza.UnidadReplicacion=CO_CObranza.UnidadReplicacion
		and CO_DocumentoCobranza.CobranzaNumero=CO_Cobranza.CobranzaNumero
		where CO_TipoDocumento.Clasificacion in ('DC','DP') and
		documento.FechaDocumento>=@FechaDocumento
		and cliente.persona = @Persona

	</Personas.getCantidadDocumetosEmitidosFacturaDetalle>


	<Personas.getRutasDespachoDetalle>


		select
		CO_Documento.NumeroDocumento,
		CO_Documento.FechaDocumento,
		CO_DOcumento.FechaVencimiento,
		DATEDIFF(day, CO_Documento.FechaDocumento, CO_DOcumento.FechaVencimiento) AS Dias,
		0.0 as Pendiente,
		'S' as MostrarDatosRuta,
		CO_Documento.NumeroDocumento,
		CR_DOT.FechaSalida FechaDespacho,
		CO_Documento.MontoTotal,
		Cliente.Telefono,
		CR_DOT.Conductor,
		CR_DOT.FechaSalida,
		Agencia.NombreCompleto Agencia,
		Case CO_Documento.DOTEstado when 'PE' then 'Pendiente Despacho'
		when 'IN' then 'En Ruta'
		when 'CE' then 'Entregado'
		when 'AT' then 'Con Retraso'
		when 'DE' then 'Devuelto' end as EstadoDespacho
		from CO_Documento inner join PersonaMast Cliente
		ON Cliente.Persona = CO_Documento.ClienteNumero
		inner join CO_TipoDocumento
		ON CO_Documento.TipoDocumento = CO_TipoDocumento.TipoDocumento
		inner join CR_DOT
		ON CO_Documento.DOTNumero=CR_DOT.DOTNumero
		left join PersonaMast Agencia ON
		CO_Documento.TransportistaProvincia = Agencia.Persona
		where
		CO_Documento.DOTEstado in ('PE','IN','CE','AT','DE') and
		CO_TipoDocumento.Clasificacion='DC' and
		CR_DOT.FechaSalida>=@FechaEntrega and
		Cliente.Persona=@Cliente --Según el cliente seleccionado

	</Personas.getRutasDespachoDetalle>


	<Personas.getDocumentosPendientesCanje>


		<![CDATA[
		
	
			Select
			Cliente.Persona,
			Cliente.NombreCompleto Cliente,
			count(CO_Documento.NumeroDocumento) as CantidadDocumentosEmitidos
			from CO_Documento inner join PersonaMast cliente
			ON CO_Documento.ClienteNumero=Cliente.Persona
			inner join CO_TipoDocumento
			ON CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
			inner join MA_ClienteVendedor on
			Cliente.Persona=MA_ClienteVendedor.Cliente
			where CO_Documento.TipoDocumento='FC' and
			
			convert(char(6),fechadocumento,112)<>convert(char(6),getdate(),112) and
			CO_Documento.formadepago='010' and
			CO_Documento.Estado='PR'-- and

			--MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
			AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')
			group by
			Cliente.Persona,
			Cliente.NombreCompleto
			order by 2 desc
			OFFSET (@Index -1)* @PageSize  ROWS
			FETCH NEXT @PageSize ROWS ONLY


		
		]]>


	</Personas.getDocumentosPendientesCanje>

	<Personas.getDocumentosPendientesCanjeCount>


		<![CDATA[
		
	
	
	select count(1) from

		(
		Select
			Cliente.Persona,
			Cliente.NombreCompleto Cliente,
			count(CO_Documento.NumeroDocumento) as CantidadDocumentosEmitidos
			from CO_Documento inner join PersonaMast cliente
			ON CO_Documento.ClienteNumero=Cliente.Persona
			inner join CO_TipoDocumento
			ON CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
			inner join MA_ClienteVendedor on
			Cliente.Persona=MA_ClienteVendedor.Cliente
			where CO_Documento.TipoDocumento='FC' and
			
			convert(char(6),fechadocumento,112)<>convert(char(6),getdate(),112) and
			CO_Documento.formadepago='010' and
			CO_Documento.Estado='PR'-- and

			--MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
			AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')
			group by
			Cliente.Persona,
			Cliente.NombreCompleto
		)a
	
	
			 

		
		]]>


	</Personas.getDocumentosPendientesCanjeCount>

	<Personas.DocumentosPendientesCanjeDetalle>


		<![CDATA[
		
	 
			select
	0.0 as Pendiente,
NumeroDocumento,
FechaDocumento,
GETDATE() as FechaVencimiento,,
MontoTotal,
ComercialPedidoNumero as LetraNumeroUnicoString,
DATEDIFF(DAY,FechaDocumento,GETDATE()) Dias
from CO_Documento
where
CO_Documento.ClienteNumero = @Cliente and --Según el cliente consultado
CO_Documento.TipoDocumento='FC' and
convert(char(6),fechadocumento,112)<>convert(char(6),getdate(),112) and
CO_Documento.formadepago='010' and
CO_Documento.Estado='PR'
		
		]]>


	</Personas.DocumentosPendientesCanjeDetalle>


	<Personas.getRutasDespacho>


		select
		Cliente.Persona,
		Cliente.NombreCompleto as Cliente,
		count(CO_Documento.NumeroDocumento) CantidadDocumentosEmitidos
		from CO_Documento inner join PersonaMast Cliente
		ON Cliente.Persona = CO_Documento.ClienteNumero
		left join CO_TipoDocumento
		ON CO_Documento.TipoDocumento = CO_TipoDocumento.TipoDocumento
		left join CR_DOT
		ON CO_Documento.DOTNumero=CR_DOT.DOTNumero
		left join MA_ClienteVendedor
		ON Cliente.Persona=MA_ClienteVendedor.Cliente
		where
		CO_Documento.DOTEstado in ('PE','IN','CE','AT','DE')
		and CO_TipoDocumento.Clasificacion='DC'
		AND(@Busqueda is null or @Busqueda = '' or UPPER(CONVERT(VARCHAR, Cliente.Persona) + Cliente.Busqueda + Cliente.Documento)like '%' + upper(@Busqueda) + '%')  
		and CR_DOT.FechaSalida>=@FechaDocumento
		and MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
		group by
		Cliente.Persona,
		Cliente.NombreCompleto

	</Personas.getRutasDespacho>

	<Personas.getRutasDespachoCount>


		select count(1) from

		(
		select
		Cliente.NombreCompleto,
		count(CO_Documento.NumeroDocumento) PendienteDesp
		from CO_Documento inner join PersonaMast Cliente
		ON Cliente.Persona = CO_Documento.ClienteNumero
		left join CO_TipoDocumento
		ON CO_Documento.TipoDocumento = CO_TipoDocumento.TipoDocumento
		left join CR_DOT
		ON CO_Documento.DOTNumero=CR_DOT.DOTNumero
		left join MA_ClienteVendedor
		ON Cliente.Persona=MA_ClienteVendedor.Cliente
		where
		CO_Documento.DOTEstado in ('PE','IN','CE','AT','DE')
		and CO_TipoDocumento.Clasificacion='DC'
		AND(@Busqueda is null or @Busqueda = '' or UPPER(CONVERT(VARCHAR, Cliente.Persona) + Cliente.Busqueda + Cliente.Documento)like '%' + upper(@Busqueda) + '%')  
		and CR_DOT.FechaSalida>=@FechaDocumento
		and MA_ClienteVendedor.Vendedor=@Vendedor -- Según el vendedor loggeado
		group by
		Cliente.NombreCompleto
		)a

	</Personas.getRutasDespachoCount>


	<Personas.getCobranzasEmitidadasDetalle>


		<![CDATA[
		
	select
CO_Documento.NumeroDocumento,
CO_Documento.FechaDocumento,
CO_DOcumento.FechaVencimiento,
 DATEDIFF(day, CO_Documento.FechaDocumento, CO_DOcumento.FechaVencimiento) AS Dias,
CO_Documento.MontoTotal,
CO_Documento.MontoPagado as Pendiente
from CO_Cobranza inner join CO_DocumentoCobranza
 ON CO_Cobranza.CompaniaSocio = CO_DocumentoCobranza.CompaniaSocio
  and CO_Cobranza.UnidadReplicacion = CO_DocumentoCobranza.UnidadReplicacion
  and CO_Cobranza.CobranzaNumero = CO_DocumentoCobranza.CobranzaNumero
  inner join PersonaMast Cliente
  ON CO_Cobranza.Cliente = Cliente.Persona
  inner join CO_Documento
  ON CO_Documento.CompaniaSocio = CO_DocumentoCobranza.CompaniaSocio and
  CO_Documento.TipoDocumento = CO_DocumentoCobranza.TipoDocumento and
  CO_Documento.NumeroDocumento = CO_DocumentoCobranza.NumeroDocumento
where CO_CObranza.Estado<>'AN' and
 CONVERT (CHAR (6), CO_Cobranza.FechaCobranza, 112)=@FechaCobranza and 
 CO_Cobranza.Cliente=@Cliente 
		
		]]>

	</Personas.getCobranzasEmitidadasDetalle>
	
	<Personas.getCobranzasEmitidadas>


		<![CDATA[
		
		 
		
		
			select
		Cliente.Persona,
		Cliente.NombreCompleto as Cliente,
		count(CO_Cobranza.CobranzaNumero) CantidadDocumentosEmitidos,
		sum(CO_DocumentoCobranza.MontoPagado)  as MontoTotal
		from CO_Cobranza inner join CO_DocumentoCobranza
		ON CO_Cobranza.CompaniaSocio = CO_DocumentoCobranza.CompaniaSocio
		and CO_Cobranza.UnidadReplicacion = CO_DocumentoCobranza.UnidadReplicacion
		and CO_Cobranza.CobranzaNumero = CO_DocumentoCobranza.CobranzaNumero
		inner join PersonaMast Cliente
		ON CO_Cobranza.Cliente = Cliente.Persona
		where 
		Cliente.Persona = ISNULL(@Persona,Cliente.Persona) and
		CO_CObranza.Estado<>'AN' and
		CONVERT (CHAR (6), CO_Cobranza.FechaCobranza, 112)=@Periodo -- Según el periodo filtrado
		group by
		Cliente.Persona,
		Cliente.NombreCompleto
		order by 2 desc
		OFFSET (@Index -1)* @PageSize  ROWS
		FETCH NEXT @PageSize ROWS ONLY
		
		]]>

	</Personas.getCobranzasEmitidadas>


	<Personas.getCobranzasEmitidadasCount>


	<![CDATA[
	
	
	
		select count(1) from

		(
		select
		Cliente.NombreCompleto as Cliente,
		count(CO_Cobranza.CobranzaNumero) CantidadDocumentosEmitidos,
				sum(CO_DocumentoCobranza.MontoPagado)  as MontoTotal
		from CO_Cobranza inner join CO_DocumentoCobranza
		ON CO_Cobranza.CompaniaSocio = CO_DocumentoCobranza.CompaniaSocio
		and CO_Cobranza.UnidadReplicacion = CO_DocumentoCobranza.UnidadReplicacion
		and CO_Cobranza.CobranzaNumero = CO_DocumentoCobranza.CobranzaNumero
		inner join PersonaMast Cliente
		ON CO_Cobranza.Cliente = Cliente.Persona
		where 
		Cliente.Persona = ISNULL(@Persona,Cliente.Persona) and
		CO_CObranza.Estado<>'AN' and
		CONVERT (CHAR (6), CO_Cobranza.FechaCobranza, 112)=@Periodo -- Según el periodo filtrado
		group by
		Cliente.NombreCompleto
		)a
	
	]]>

	</Personas.getCobranzasEmitidadasCount>


	<Personas.DireccionByClienteAll>
		select Persona,Secuencia,Direccion,ReferenciasDireccion , RutaDespacho from Direccion with(nolock)
	</Personas.DireccionByClienteAll>

	<Personas.getPersonasOnlineCount>



		select
		COUNT(1)
		from PersonaMast with(nolock)
		inner join ClienteMast cli with(nolock) on PersonaMast.Persona= cli.Cliente
		left join CO_TipoFacturacion tipo with(nolock) on cli.TipoFacturacion = tipo.TipoFacturacion
		inner join MA_ClienteVendedor cliven with(nolock) on cli.Cliente= cliven.Cliente and cliven.Vendedor = @Vendedor
		left join FT_Vehiculo ftvehi with(nolock) on  cli.IdTransportista = ftvehi.IdTransportista
		where EsCliente='S' and PersonaMast.Estado = 'A' and
		(@Persona is null or @Persona='' or Persona = @Persona)
		AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,Persona)+Busqueda+Documento)like '%'+upper(@Busqueda)+'%')




	</Personas.getPersonasOnlineCount>

	<PersonaMast.GetIdByUser>
		select Empleado as Persona from EmpleadoMast with(nolock) where CodigoUsuario= @Usuario
	</PersonaMast.GetIdByUser>


	<PersonaMast.getDataValidacionDocumentosVencidos>

		select
		DATEDIFF(DAY,CO_Documento.FechaVencimiento,GETDATE())
		from CO_Documento inner join
		CO_TipoDocumento on CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		left join PersonaMast Cliente on CO_Documento.ClienteNumero=Cliente.Persona
		left join PersonaMast GrupoEmpresarial on Cliente.GrupoEmpresarial=GrupoEmpresarial.GrupoEmpresarial
		where CO_TipoDocumento.Clasificacion in ('DC','DP','LE') and CO_Documento.Estado='PR'
		and CO_Documento.ClienteNumero=@ClienteNumero
		and CO_Documento.UnidadNegocio='LIMA'
		group by CO_Documento.FechaVencimiento
		having DATEDIFF(DAY,CO_Documento.FechaVencimiento,GETDATE())> (select Numero from ParametrosMast where ParametroClave = 'VALIDIALIM')
		UNION ALL
		select
		DATEDIFF(DAY,CO_Documento.FechaVencimiento,GETDATE())
		from CO_Documento inner join
		CO_TipoDocumento on CO_Documento.TipoDocumento=CO_TipoDocumento.TipoDocumento
		left join PersonaMast Cliente on CO_Documento.ClienteNumero=Cliente.Persona
		left join PersonaMast GrupoEmpresarial on Cliente.GrupoEmpresarial=GrupoEmpresarial.GrupoEmpresarial
		where CO_TipoDocumento.Clasificacion in ('DC','DP','LE') and CO_Documento.Estado='PR'
		and CO_Documento.ClienteNumero=@ClienteNumero
		and CO_Documento.UnidadNegocio='PROV'
		group by CO_Documento.FechaVencimiento
		having DATEDIFF(DAY,CO_Documento.FechaVencimiento,GETDATE())>(select Numero from ParametrosMast where ParametroClave = 'VALIDIAPRO')




	</PersonaMast.getDataValidacionDocumentosVencidos>




	<PersonaMast.getCentroCostosUser>
		select CentroCosto from ClienteMast with(nolock) where cliente=@Persona
	</PersonaMast.getCentroCostosUser>

	<PersonaMast.getDataEmpleado>
		select Sucursal , UnidadNegocioAsignada as UnidadNegocio from EmpleadoMast with(nolock) where empleado=@Empleado
	</PersonaMast.getDataEmpleado>

	<Configuracion.getParametroTextto>
		select texto from ParametrosMast with(nolock)  where AplicacionCodigo='CO' and ParametroClave=@ParametroClave and CompaniaCodigo=@Compania
	</Configuracion.getParametroTextto>

	<Configuracion.getParametroNumero>
		select numero from ParametrosMast with(nolock)  where AplicacionCodigo='CO' and ParametroClave=@ParametroClave and CompaniaCodigo=@Compania
	</Configuracion.getParametroNumero>



	<Usuario.getLineaCreditoCabecera>

		<![CDATA[
	 
	
	
	SELECT PersonaMast.Persona,
	PersonaMast.Busqueda,
	PersonaMast.DocumentoFiscal,
	cASE WHEN ClienteMast.Clasificacion='B' then 'Bueno' when ClienteMast.Clasificacion='R' then 'Regular'
	when ClienteMast.Clasificacion='M' then 'Malo' else 'Otro' end Clasificacion,
	MA_FormadePago.Descripcion FormaPago,
	Case when CO_LineaCredito.Moneda='LO' then 'Soles' else 'Dólares' end Moneda,
	CO_LineaCredito.Monto,
	CO_LineaCredito.FechaVigenciaDesde,
	CO_LineaCredito.FechaVigenciaHasta
	FROM ClienteMast, PersonaMast, SY_CampoCalculado, CO_LineaCredito, MA_FormadePago
	WHERE (CO_LineaCredito.CompaniaSocio = @CompaniaSocio) and
	( PersonaMast.Persona = ClienteMast.Cliente ) and
	( CO_LineaCredito.ClienteNumero = ClienteMast.Cliente ) and
	( CO_LineaCredito.FormadePago = MA_FormadePago.FormadePago) and
	( ( ClienteMast.Cliente = @Persona ) ) AND -- Depende del cliente que seleccionen
	CO_LineaCredito.Estado = 'A'
	
		
		]]>

	</Usuario.getLineaCreditoCabecera>


	<Usuario.getLineaCreditoMonto>

		<![CDATA[
	
	 
		
		
		SELECT
'Linea Credito' as Tipo,
Case when CO_LineaCredito.Moneda='LO' then CO_LineaCredito.Monto else CO_LineaCredito.Monto*@TipoCambio end MontoLocal ,
Case When CO_LineaCredito.Moneda='EX' then CO_LineaCredito.Monto else CO_LineaCredito.Monto/@TipoCambio end MontoDolares
FROM ClienteMast, PersonaMast, SY_CampoCalculado, CO_LineaCredito
WHERE (CO_LineaCredito.CompaniaSocio = @CompaniaSocio) and
( PersonaMast.Persona = ClienteMast.Cliente ) and
( CO_LineaCredito.ClienteNumero = ClienteMast.Cliente ) and
( ( ClienteMast.Cliente = @Persona ) ) AND
CO_LineaCredito.Estado = 'A'
UNION
SELECT
'MontoUtilizado'  as Tipo,
sum(Case when CO_Documento.MonedaDocumento='LO' then CO_Documento.MontoTotal-CO_Documento.MontoPagado else (CO_Documento.MontoTotal-CO_Documento.MontoPagado)*CO_Documento.TipodeCambio end) MontoLocal,
sum(Case when CO_Documento.MonedaDocumento='EX' then CO_Documento.MontoTotal-CO_Documento.MontoPagado else (CO_Documento.MontoTotal-CO_Documento.MontoPagado)/CO_Documento.TipodeCambio end) MontoDolares
FROM {oj CO_Documento LEFT OUTER JOIN MA_FormadePago ON CO_Documento.FormadePago = MA_FormadePago.FormadePago}, CO_TipoDocumento, ClienteMast, CO_TipoVenta
WHERE ( CO_Documento.TipoDocumento = CO_TipoDocumento.TipoDocumento ) and
( CO_Documento.ClienteNumero = ClienteMast.Cliente ) and
( CO_Documento.TipoVenta = CO_TipoVenta.TipoVenta ) and
( CO_Documento.CompaniaSocio = @CompaniaSocio ) AND
( CO_Documento.ClienteNumero = @Persona ) AND
(CO_Documento.Estado = 'PR' AND CO_Documento.TipoDocumento <> 'PE') AND
(CO_Documento.TipoDocumento <> 'PK' AND CO_Documento.MontoTotal <> 0 ) AND
MA_FormadePago.CreditoFlag = 'S'
		
		
		
		]]>

	</Usuario.getLineaCreditoMonto>


	<Usuario.getDetalleFacturasLinea>

		<![CDATA[
	
	 
		 
SELECT CO_Documento.LetraNumeroUnico, CO_Documento.TipoDocumento+CO_Documento.NumeroDocumento as NumeroDocumento, 
CASE CO_Documento.MonedaDocumento
		When 'LO' Then 'S/ ' +  FORMAT(CO_Documento.MontoTotal, '#,##0.00')
		When 'EX' Then '$ ' +FORMAT(CO_Documento.MontoTotal, '#,##0.00')
		ELSE 'XX ' + FORMAT(CO_Documento.MontoTotal, '#,##0.00')  end AS MontoTotal,
CASE CO_Documento.MonedaDocumento
		When 'LO' Then 'S/ ' +  FORMAT(CO_Documento.MontoTotal-CO_Documento.MontoPagado, '#,##0.00')
		When 'EX' Then '$ ' +FORMAT(CO_Documento.MontoTotal-CO_Documento.MontoPagado, '#,##0.00')
		ELSE 'XX ' + FORMAT(CO_Documento.MontoTotal-CO_Documento.MontoPagado, '#,##0.00')  end AS MontoPendiente,  
convert(varchar(20),CO_Documento.FechaDocumento,103)   as FechaDocumento,
convert(varchar(20),CO_Documento.FechaVencimiento,103)   as FechaVencimiento,
DATEDIFF(DAY,CO_Documento.FechaVencimiento,GETDATE()) DiasVencido
FROM {oj CO_Documento LEFT OUTER JOIN MA_FormadePago ON CO_Documento.FormadePago = MA_FormadePago.FormadePago}, CO_TipoDocumento, ClienteMast, CO_TipoVenta
WHERE ( CO_Documento.TipoDocumento = CO_TipoDocumento.TipoDocumento ) and
( CO_Documento.ClienteNumero = ClienteMast.Cliente ) and
( CO_Documento.TipoVenta = CO_TipoVenta.TipoVenta ) and
( CO_Documento.CompaniaSocio = @CompaniaSocio ) AND
( CO_Documento.ClienteNumero = @Persona ) AND -- Depende del cliente que seleccionen
( CO_Documento.Estado = 'PR') AND
( CO_Documento.TipoDocumento <> 'PE') AND
( CO_Documento.TipoDocumento <> 'PK' AND CO_Documento.MontoTotal <> 0 ) AND
MA_FormadePago.CreditoFlag = 'S'
		
		
		
		]]>

	</Usuario.getDetalleFacturasLinea>


	<Personas.getVendedorOnnline>

		select persona.Busqueda,persona.Telefono,persona.Direccion,persona.CorreoElectronico,persona.Documento
		from CO_Vendedor vendedor
		left join PersonaMast persona on persona.Persona = vendedor.Vendedor
		where (@Persona is null or @Persona='' or persona.Persona = @Persona)
		AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,persona.Persona)+persona.Busqueda+persona.Documento)like '%'+upper(@Busqueda)+'%')
		order by persona.Persona desc
		OFFSET (@Index -1)* @PageSize  ROWS
		FETCH NEXT @PageSize ROWS ONLY


	</Personas.getVendedorOnnline>


	<Personas.getVendedorOnnlineCount>



		select count(1)
		from CO_Vendedor vendedor
		left join PersonaMast persona on persona.Persona = vendedor.Vendedor
		where (@Persona is null or @Persona='' or persona.Persona = @Persona)
		AND (@Busqueda is null or @Busqueda='' or UPPER(CONVERT(VARCHAR ,persona.Persona)+persona.Busqueda+persona.Documento)like '%'+upper(@Busqueda)+'%')




	</Personas.getVendedorOnnlineCount>



</sql-query>

